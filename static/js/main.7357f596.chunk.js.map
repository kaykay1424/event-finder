{"version":3,"sources":["Alert.js","CitySearch.js","Event.js","EventList.js","NumberOfEvents.js","WelcomeScreen.jsx","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Alert","props","getStyle","color","className","style","this","text","Component","ErrorAlert","fontWeight","InfoAlert","CitySearch","state","infoText","query","showSuggestions","undefined","suggestions","handleInputChange","value","locations","filter","location","toUpperCase","indexOf","length","setState","handleItemClick","selectedCity","updateEvents","htmlFor","id","type","onChange","e","target","onFocus","map","suggestion","onClick","Event","showState","event","showDetails","eventStartDate","Date","start","dateTime","eventStartHours","getHours","eventStartMinutes","getMinutes","eventStartTime","eventEndDate","end","eventEndHours","eventEndMinutes","eventEndTime","summary","toDateString","href","htmlLink","rel","description","EventList","events","useState","setInfoText","useEffect","navigator","onLine","NumberOfEvents","numEvents","max","maxNumEvents","WelcomeScreen","showWelcomeScreen","getAccessToken","src","alt","process","mockData","JSON","parse","stringify","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","localStorage","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","window","search","get","code","axios","results","authUrl","data","getToken","encodeCode","encodeURIComponent","access_token","setItem","getEvents","NProgress","startsWith","done","token","removeQuery","url","history","pushState","pathname","newurl","protocol","host","App","currentLocation","updatedEvents","slice","mounted","isTokenValid","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","require","atatus","install","ReactDOM","render","StrictMode","document","getElementById","URL","origin","addEventListener","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.7357f596.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nclass Alert extends Component {\n    constructor(props) {\n        super(props);\n        this.color = null;\n    }\n\n    getStyle = () => {\n        return {\n            color: this.color\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"Alert\">\n                <p style={this.getStyle()}>{this.props.text}</p>\n            </div>\n        );\n    }    \n}\n\nclass ErrorAlert extends Alert {\n    constructor(props) {\n        super(props);\n    }\n\n    getStyle = () => {\n        return {\n            color: '#BA5550',\n            fontWeight: 'bold'\n        };\n    }\n}\n\nclass InfoAlert extends Alert {\n    constructor(props) {\n        super(props);\n        this.color = '#31598F';\n    }\n}\n\nAlert.propTypes = {\n    text: PropTypes.string.isRequired\n};\n\nexport {ErrorAlert, InfoAlert};","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport {InfoAlert} from './Alert';\n\nclass CitySearch extends Component {\n    state = {\n        infoText: '',\n        query: '',\n        showSuggestions: undefined,\n        suggestions: []\n    }\n\n    handleInputChange = (value) => {\n        const suggestions = this.props.locations.filter((location) => {\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n        });\n\n        if (suggestions.length === 0) {\n            this.setState({\n                infoText: 'No matching cities were found. Please try again.',\n                query: value,\n                suggestions\n            });\n        } else {\n            this.setState({\n                infoText: '',\n                query: value,\n                suggestions\n            });\n        }\n    }\n\n    handleItemClick = (selectedCity) => {\n        this.setState({\n            infoText: '',\n            query: selectedCity,\n            showSuggestions: false\n        });\n\n        this.props.updateEvents(selectedCity);\n    }\n\n    render() {\n        const {\n            query, \n            showSuggestions, \n            suggestions\n        } = this.state;\n        return (\n            <div className=\"City-Search\">\n                <label htmlFor=\"city\">Choose your city</label>\n                <input \n                    id=\"city\"\n                    className=\"city\"\n                    type=\"text\" \n                    value={query}\n                    onChange={(e) => this.handleInputChange(e.target.value)}\n                    onFocus={() => this.setState({showSuggestions: true})}\n                /> \n                <ul \n                    className={`suggestions ${\n                        showSuggestions ? 'show': 'hide'}`}\n                >\n                    {suggestions.map(suggestion => (\n                        <li \n                            key={suggestion}\n                            onClick={() => this.handleItemClick(suggestion)}\n                        >\n                            {suggestion}\n                        </li>\n                    ))}\n                    <li \n                        key='all'\n                        onClick={() => this.handleItemClick('all')}\n                    >\n                        <b>See all cities</b>\n                    </li>\n                </ul>                \n                <InfoAlert \n                    text={this.state.infoText} \n                />\n            </div>\n        );\n    }\n}\n\nCitySearch.propTypes = {\n    locations: PropTypes.array.isRequired,\n    updateEvents: PropTypes.func\n};\n\nexport default CitySearch;\n","import React, {Component} from 'react';\nimport PropTypes, {shape} from 'prop-types';\n\nclass Event extends Component {\n    state = {\n        showState: false\n    }\n\n    render() {\n        const {event} = this.props;\n        const {showDetails} = this.state;\n        const eventStartDate = new Date(event.start.dateTime);\n        const eventStartHours = eventStartDate.getHours();\n        const eventStartMinutes = eventStartDate.getMinutes();\n        const eventStartTime = `${eventStartHours}:${\n            eventStartMinutes === 0 ? '00' : eventStartMinutes}`;\n        const eventEndDate = new Date(event.end.dateTime);\n        const eventEndHours = eventEndDate.getHours();\n        const eventEndMinutes = eventEndDate.getMinutes();\n        const eventEndTime = `${eventEndHours}:${\n            eventEndMinutes === 0 ? '00': eventEndMinutes}`;\n        return <div className=\"Event\">\n            <h3>{event.summary}</h3>\n            <p><b>Date:</b> {new Date(event.start.dateTime).toDateString()}</p>\n            <p><b>Time:</b> {eventStartTime} - {eventEndTime}</p>\n            <p>\n                <b>Location: </b> \n                <span className=\"location\">{event.location}</span>\n            </p>\n            <div \n                className={`details ${\n                    showDetails ? 'show': 'hide'\n                }`\n                }\n            >\n                <h4>About event:</h4>\t\n                <p>\n                    <a \n                        href={event.htmlLink} \n                        rel=\"noreferrer\"\n                        target=\"_blank\">See details on Google Calendar\n                    </a>\n                </p>\n                <p>{event.description}</p>\n            </div>\n            <button \n                className=\"toggle-details\"\n                onClick={() => this.setState({showDetails: !showDetails})}\n            >Details</button>\n        </div>;\n    }\n}\n\nEvent.propTypes = {\n    event: shape({\n        description: PropTypes.string.required,\n        htmlLink: PropTypes.string.required\n    })\n};\nexport default Event;","import React, {useState, useEffect} from 'react';\nimport Event from './Event';\nimport PropTypes from 'prop-types';\n\nimport {InfoAlert} from './Alert';\n\nconst EventList = ({events}) => {\n    const [infoText, setInfoText] = useState('');\n\n    useEffect(() => {\n        setInfoText(navigator.onLine \n            ? '' : `The list loaded may not be up to date. \n        Please go online to view the most current list.`);\n    }, [events]);\n\n    return (\n        <>\n            <InfoAlert \n                text={infoText} \n            />\n            <ul className=\"Event-List\">\n                {events.map(event =>\n                    <li key={event.id}>\n                        <Event event={event} />\n                    </li>\n                )}\n            </ul>\n        </>\n    );\n};\n\nEventList.propTypes = {\n    events: PropTypes.array.isRequired\n};\n\nexport default EventList;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport {ErrorAlert} from './Alert';\n\nclass NumberOfEvents extends Component {\n    state = {\n        infoText: '',\n        numEvents: 20\n    }\n\n    handleInputChange = (value) => {\n        if (value < 0 || value > 50) {\n            this.setState({\n                infoText: 'Please enter a number between 0 and 50.',\n                numEvents: value\n            });\n        } else {\n            this.setState({\n                infoText: '',\n                numEvents: value\n            });\n        }\n        \n        \n\n        this.props.updateEvents(null, value);\n    }\n\n    render() {\n        return (\n            <div className=\"Number-Of-Events\">\n                <label htmlFor=\"number\">Select number of events</label>\n                <input \n                    id=\"number\"\n                    className=\"number\"\n                    type=\"number\"\n                    value={this.state.numEvents}\n                    max={this.props.maxNumEvents}\n                    onChange={(e) => this.handleInputChange(e.target.value)}\n                />\n                <ErrorAlert text={this.state.infoText} />\n            </div>\n        );\n    }\n}\n\nNumberOfEvents.propTypes = {\n    maxNumEvents: PropTypes.number,\n    updateEvents: PropTypes.func\n};\n\nexport default NumberOfEvents;\n","import React from 'react';\nimport './WelcomeScreen.css';\nimport PropTypes from 'prop-types';\n\nfunction WelcomeScreen({showWelcomeScreen, getAccessToken}) {\n    return showWelcomeScreen ?\n        (\n            <div className=\"WelcomeScreen\">\n                <h1>Welcome to the Meet app</h1>\n                <h4>\n                    Log in to see upcoming events around the world for\n                    full-stack\n                    developers\n                </h4>\n                <div className=\"button_cont\" >\n                    <div className=\"google-btn\">\n                        <div className=\"google-icon-wrapper\">\n                            <img\n                                className=\"google-icon\"\n                                // eslint-disable-next-line max-len\n                                src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\n                                alt=\"Google sign-in\"\n                            />\n                        </div>\n                        <button onClick={() => { getAccessToken(); }}\n                            rel=\"nofollow noopener\"\n                            className=\"btn-text\"\n                        >\n                            <b>Sign in with google</b>\n                        </button>\n                    </div>\n                </div>\n                <a\n                    // eslint-disable-next-line max-len\n                    href={`${process.env.PUBLIC_URL}/privacy-policy.html`}\n                    rel=\"nofollow noopener\"\n                >\n    Privacy policy\n                </a>\n            </div>\n        )\n        : null;\n}\n\nWelcomeScreen.propTypes = {\n    getAccessToken: PropTypes.func.isRequired,\n    showWelcomeScreen: PropTypes.bool.isRequired\n};\n\nexport default WelcomeScreen;","export const mockData = JSON.parse(JSON.stringify([\n    {\n        'kind': 'calendar#event',\n        'etag': '\"3181161784712000\"',\n        'id': '4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z',\n        'status': 'confirmed',\n        'htmlLink': 'https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\n        'created': '2020-05-19T19:17:46.000Z',\n        'updated': '2020-05-27T12:01:32.356Z',\n        'summary': 'Learn JavaScript',\n        'description': 'Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.',\n        'location': 'London, UK',\n        'creator': {\n            'email': 'fullstackwebdev@careerfoundry.com',\n            'self': true\n        },\n        'organizer': {\n            'email': 'fullstackwebdev@careerfoundry.com',\n            'self': true\n        },\n        'start': {\n            'dateTime': '2020-05-19T16:00:00+02:00',\n            'timeZone': 'Europe/Berlin'\n        },\n        'end': {\n            'dateTime': '2020-05-19T17:00:00+02:00',\n            'timeZone': 'Europe/Berlin'\n        },\n        'recurringEventId': '4eahs9ghkhrvkld72hogu9ph3e',\n        'originalStartTime': {\n            'dateTime': '2020-05-19T16:00:00+02:00',\n            'timeZone': 'Europe/Berlin'\n        },\n        'iCalUID': '4eahs9ghkhrvkld72hogu9ph3e@google.com',\n        'sequence': 0,\n        'reminders': {\n            'useDefault': true\n        },\n        'eventType': 'default'\n    },\n    {\n        'kind': 'calendar#event',\n        'etag': '\"3181159875584000\"',\n        'id': '3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z',\n        'status': 'confirmed',\n        'htmlLink': 'https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\n        'created': '2020-05-19T19:14:30.000Z',\n        'updated': '2020-05-27T11:45:37.792Z',\n        'summary': 'React is Fun',\n        'description': 'Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. ',\n        'location': 'Berlin, Germany',\n        'creator': {\n            'email': 'fullstackwebdev@careerfoundry.com',\n            'self': true\n        },\n        'organizer': {\n            'email': 'fullstackwebdev@careerfoundry.com',\n            'self': true\n        },\n        'start': {\n            'dateTime': '2020-05-20T14:00:00+02:00',\n            'timeZone': 'Europe/Berlin'\n        },\n        'end': {\n            'dateTime': '2020-05-20T15:00:00+02:00',\n            'timeZone': 'Europe/Berlin'\n        },\n        'recurringEventId': '3qtd6uscq4tsi6gc7nmmtpqlct',\n        'originalStartTime': {\n            'dateTime': '2020-05-20T14:00:00+02:00',\n            'timeZone': 'Europe/Berlin'\n        },\n        'iCalUID': '3qtd6uscq4tsi6gc7nmmtpqlct@google.com',\n        'sequence': 0,\n        'reminders': {\n            'useDefault': true\n        },\n        'eventType': 'default'\n    }\t   \n]));\n\n","import {mockData} from './mock-data';\nimport axios from 'axios';\nimport NProgress from 'nprogress';\n\nexport const extractLocations = (events) => {\n    const extractLocations = events.map((event) => event.location);\n    const locations = [...new Set(extractLocations)];\n    return locations;\n};\n\nexport const checkToken = async (accessToken) => {\n    const result = await fetch(\n        // eslint-disable-next-line max-len\n        `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n    )\n        .then((res) => res.json())\n        .catch((error) => error.json());\n  \n    return result;\n};\n\nexport const getAccessToken = async () => {\n    const accessToken = localStorage.getItem('access_token');\n    const tokenCheck = accessToken && (await checkToken(accessToken));\n\n    if (!accessToken || tokenCheck.error) {\n        await localStorage.removeItem('access_token');\n        const searchParams = new URLSearchParams(window.location.search);\n        const code = await searchParams.get('code');\n        if (!code) {\n            const results = await axios.get(\n                // eslint-disable-next-line max-len\n                'https://cx7nza2e8i.execute-api.us-west-2.amazonaws.com/dev/api/get-auth-url'\n            );\n            const {authUrl} = results.data;\n            return (window.location.href = authUrl);\n        }\n        return code && getToken(code);\n    }\n    return accessToken;\n};\n\nconst getToken = async (code) => {\n    const encodeCode = encodeURIComponent(code);\n    const {access_token} = await fetch(\n        // eslint-disable-next-line max-len\n        `https://cx7nza2e8i.execute-api.us-west-2.amazonaws.com/dev/api/token/${encodeCode}`\n    ).then((res) => {\n        return res.json();\n    }).catch((error) => error);\n  \n    access_token && localStorage.setItem('access_token', access_token);\n  \n    return access_token;\n};\n\nexport const getEvents = async () => {\n    NProgress.start();\n\n    if (window.location.href.startsWith('http://localhost')) {\n        NProgress.done();\n        return mockData;\n    }\n\n    if (!navigator.onLine) {\n        const data = localStorage.getItem('lastEvents');\n        NProgress.done();\n        return data ? JSON.parse(data).events: [];\n    }\n\n    const token = await getAccessToken();\n\n    if (token) {\n        removeQuery();\n        // eslint-disable-next-line max-len\n        const url = `https://cx7nza2e8i.execute-api.us-west-2.amazonaws.com/dev/api/get-events/${token}`;\n        const result = await axios.get(url);\n        if (result.data) {\n            const locations = extractLocations(result.data.events);\n            localStorage.setItem('lastEvents', JSON.stringify(result.data));\n            localStorage.setItem('locations', JSON.stringify(locations));\n        }\n        NProgress.done();\n        return result.data.events;\n    }\n};\n\nconst removeQuery = () => {\n    if (window.history.pushState && window.location.pathname) {\n        const newurl =\n            window.location.protocol +\n            '//' +\n            window.location.host +\n            window.location.pathname;\n        window.history.pushState('', '', newurl);\n    } else {\n        const newurl = window.location.protocol + '//' + window.location.host;\n        window.history.pushState('', '', newurl);\n    }\n};","import React, {Component} from 'react';\nimport './App.css';\nimport './nprogress.css';\nimport CitySearch from './CitySearch';\nimport EventList from './EventList';\nimport NumberOfEvents from './NumberOfEvents';\nimport WelcomeScreen from './WelcomeScreen';\nimport {checkToken, extractLocations, getAccessToken, getEvents} from './api';\n\nclass App extends Component {\n    state = {\n        currentLocation: 'all',\n        events: [],\n        locations: [],\n        showWelcomeScreen: undefined\n    }\n\n    async componentDidMount() {\n        this.mounted = true;\n        const accessToken = localStorage.getItem('access_token');\n        const isTokenValid = (await checkToken(accessToken)).error \n            ? false : true;\n        const searchParams = new URLSearchParams(window.location.search);\n        const code = searchParams.get('code');\n        this.setState({showWelcomeScreen: !(code || isTokenValid)});\n        if ((code || isTokenValid) && this.mounted) {\n            getEvents().then((events) => {\n                if (this.mounted) {\n                    this.setState({\n                        events, \n                        locations: extractLocations(events)\n                    });\n                }\n            });\n        }\n       \n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n    }\n\n    updateEvents = (location, numEvents) => {\n        \n        if (location) \n            this.setState({\n                currentLocation: location\n            });\n            \n        else if (!location)\n            location = this.state.currentLocation;\n            \n        if (!numEvents) numEvents = 20;\n        \n        getEvents()\n            .then(events => { \n                let updatedEvents;\n                if (location === 'all') \n                    updatedEvents = events;\n                else \n                    updatedEvents = events.filter(event => \n                        event.location === location\n                    );\n                  \n                this.setState({\n                    events: updatedEvents.slice(\n                        0, numEvents),\n                    maxNumEvents: updatedEvents.length    \n                });\n            });\n    }\n\n    render() {\n        const {events, locations, showWelcomeScreen} = this.state;\n        const {updateEvents} = this;\n        if (showWelcomeScreen === undefined) return <div className=\"App\" />;\n        \n        return (\n            <div className=\"App\">\n                <CitySearch locations={locations} updateEvents={updateEvents} \n                />\n                <NumberOfEvents \n                    maxNumEvents={this.state.maxNumEvents} \n                    updateEvents={updateEvents} \n                />\n                <EventList events={events} />\n                <WelcomeScreen showWelcomeScreen={this.state.showWelcomeScreen}\n                    getAccessToken={() => {getAccessToken();}} />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nrequire('dotenv').config();\nimport * as atatus from 'atatus-spa';\natatus.config(process.env.REACT_APP_ATATUS_KEY).install();\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}