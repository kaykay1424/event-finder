{"version":3,"sources":["mock-data.js","api.js","Alert.js","CitySearch.js","Event.js","EventList.js","NumberOfEvents.js","EventGenre.js","WelcomeScreen.jsx","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["mockData","JSON","parse","stringify","convertTime","time","timeArray","split","numHours","numMinutes","extractLocations","events","map","event","location","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getAccessToken","localStorage","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","window","search","get","code","axios","results","authUrl","data","href","getToken","encodeCode","encodeURIComponent","access_token","setItem","getEvents","NProgress","start","startsWith","done","navigator","onLine","token","removeQuery","url","locations","history","pushState","pathname","newurl","protocol","host","Alert","props","getIcon","icon","getStyle","color","fontWeight","faExclamationTriangle","className","style","this","text","Component","ErrorAlert","InfoAlert","faInfoCircle","CitySearch","state","infoText","query","showSuggestions","undefined","suggestions","handleInputChange","value","filter","toUpperCase","indexOf","length","setState","handleItemClick","selectedCity","updateEvents","htmlFor","id","type","onChange","e","target","onFocus","suggestion","onClick","Event","showState","showDetails","eventStartDate","Date","dateTime","eventStartHours","getHours","eventStartMinutes","getMinutes","eventStartTime","eventEndDate","end","eventEndHours","eventEndMinutes","eventEndTime","summary","faClock","toDateString","faLocationArrow","faNewspaper","description","faCalendarAlt","htmlLink","rel","faChevronUp","faChevronDown","EventList","useState","setInfoText","useEffect","i","NumberOfEvents","currentNumEvents","maxNumEvents","numEvents","setNumEvents","maximumNumEvents","setMaximumNumEvents","max","min","EventGenre","setData","getGenresData","colors","name","sum","forEach","toLowerCase","genre","regex","RegExp","matches","match","object","percentage","toFixed","ResponsiveContainer","width","height","PieChart","Legend","verticalAlign","Pie","labelLine","outerRadius","dataKey","LabelList","position","entry","index","Cell","fill","WelcomeScreen","showWelcomeScreen","src","alt","process","App","allEvents","currentLocation","selectedChart","showUserInput","getCitiesData","cities","city","hasOwnProperty","push","slice","mounted","isTokenValid","checked","faSearch","ScatterChart","margin","left","top","CartesianGrid","XAxis","YAxis","allowDecimals","Tooltip","cursor","strokeDasharray","Scatter","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","require","atatus","REACT_APP_ATATUS_KEY","install","ReactDOM","render","StrictMode","document","getElementById","URL","origin","addEventListener","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.6cbbd68a.chunk.js","sourcesContent":["export const mockData = JSON.parse(JSON.stringify([\n    {\n        'kind': 'calendar#event',\n        'etag': '\"3181161784712000\"',\n        'id': '4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z',\n        'status': 'confirmed',\n        'htmlLink': 'https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\n        'created': '2020-05-19T19:17:46.000Z',\n        'updated': '2020-05-27T12:01:32.356Z',\n        'summary': 'Learn JavaScript',\n        'description': 'Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.',\n        'location': 'London, UK',\n        'creator': {\n            'email': 'fullstackwebdev@careerfoundry.com',\n            'self': true\n        },\n        'organizer': {\n            'email': 'fullstackwebdev@careerfoundry.com',\n            'self': true\n        },\n        'start': {\n            'dateTime': '2020-05-19T16:00:00+02:00',\n            'timeZone': 'Europe/Berlin'\n        },\n        'end': {\n            'dateTime': '2020-05-19T17:00:00+02:00',\n            'timeZone': 'Europe/Berlin'\n        },\n        'recurringEventId': '4eahs9ghkhrvkld72hogu9ph3e',\n        'originalStartTime': {\n            'dateTime': '2020-05-19T16:00:00+02:00',\n            'timeZone': 'Europe/Berlin'\n        },\n        'iCalUID': '4eahs9ghkhrvkld72hogu9ph3e@google.com',\n        'sequence': 0,\n        'reminders': {\n            'useDefault': true\n        },\n        'eventType': 'default'\n    },\n    {\n        'kind': 'calendar#event',\n        'etag': '\"3181159875584000\"',\n        'id': '3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z',\n        'status': 'confirmed',\n        'htmlLink': 'https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\n        'created': '2020-05-19T19:14:30.000Z',\n        'updated': '2020-05-27T11:45:37.792Z',\n        'summary': 'React is Fun',\n        'description': 'Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. ',\n        'location': 'Berlin, Germany',\n        'creator': {\n            'email': 'fullstackwebdev@careerfoundry.com',\n            'self': true\n        },\n        'organizer': {\n            'email': 'fullstackwebdev@careerfoundry.com',\n            'self': true\n        },\n        'start': {\n            'dateTime': '2020-05-20T14:00:00+02:00',\n            'timeZone': 'Europe/Berlin'\n        },\n        'end': {\n            'dateTime': '2020-05-20T15:00:00+02:00',\n            'timeZone': 'Europe/Berlin'\n        },\n        'recurringEventId': '3qtd6uscq4tsi6gc7nmmtpqlct',\n        'originalStartTime': {\n            'dateTime': '2020-05-20T14:00:00+02:00',\n            'timeZone': 'Europe/Berlin'\n        },\n        'iCalUID': '3qtd6uscq4tsi6gc7nmmtpqlct@google.com',\n        'sequence': 0,\n        'reminders': {\n            'useDefault': true\n        },\n        'eventType': 'default'\n    }\t   \n]));\n\n","import {mockData} from './mock-data';\nimport axios from 'axios';\nimport NProgress from 'nprogress';\n\nexport const convertTime = (time) => {\n    const timeArray = time.split(':');\n    const numHours = timeArray[0];\n    const numMinutes = timeArray[1];\n\n    if (numHours < 12) {\n        if (numHours === 0) return '12:' + numMinutes + 'am';\n        return time + 'am';\n    } \n    \n    return (numHours - 12 === 0 \n        ? 12 \n        : numHours - 12) + ':' + numMinutes + 'pm';\n    \n};\n\nexport const extractLocations = (events) => {\n    const extractLocations = events.map((event) => event.location);\n    const locations = [...new Set(extractLocations)];\n    return locations;\n};\n\nexport const checkToken = async (accessToken) => {\n    const result = await fetch(\n        // eslint-disable-next-line max-len\n        `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n    )\n        .then((res) => res.json())\n        .catch((error) => error.json());\n  \n    return result;\n};\n\nexport const getAccessToken = async () => {\n    const accessToken = localStorage.getItem('access_token');\n    const tokenCheck = accessToken && (await checkToken(accessToken));\n\n    if (!accessToken || tokenCheck.error) {\n        await localStorage.removeItem('access_token');\n        const searchParams = new URLSearchParams(window.location.search);\n        const code = await searchParams.get('code');\n        if (!code) {\n            const results = await axios.get(\n                // eslint-disable-next-line max-len\n                'https://cx7nza2e8i.execute-api.us-west-2.amazonaws.com/dev/api/get-auth-url'\n            );\n            const {authUrl} = results.data;\n            return (window.location.href = authUrl);\n        }\n        return code && getToken(code);\n    }\n    return accessToken;\n};\n\nconst getToken = async (code) => {\n    const encodeCode = encodeURIComponent(code);\n    const {access_token} = await fetch(\n        // eslint-disable-next-line max-len\n        `https://cx7nza2e8i.execute-api.us-west-2.amazonaws.com/dev/api/token/${encodeCode}`\n    ).then((res) => {\n        return res.json();\n    }).catch((error) => error);\n  \n    access_token && localStorage.setItem('access_token', access_token);\n  \n    return access_token;\n};\n\nexport const getEvents = async () => {\n    NProgress.start();\n\n    if (window.location.href.startsWith('http://localhost')) {\n        NProgress.done();\n        return mockData;\n    }\n\n    if (!navigator.onLine) {\n        const data = localStorage.getItem('lastEvents');\n        NProgress.done();\n        return data ? JSON.parse(data).events: [];\n    }\n\n    const token = await getAccessToken();\n\n    if (token) {\n        removeQuery();\n        // eslint-disable-next-line max-len\n        const url = `https://cx7nza2e8i.execute-api.us-west-2.amazonaws.com/dev/api/get-events/${token}`;\n        const result = await axios.get(url);\n        if (result.data) {\n            const locations = extractLocations(result.data.events);\n            localStorage.setItem('lastEvents', JSON.stringify(result.data));\n            localStorage.setItem('locations', JSON.stringify(locations));\n        }\n        NProgress.done();\n        return result.data.events;\n    }\n};\n\nconst removeQuery = () => {\n    if (window.history.pushState && window.location.pathname) {\n        const newurl =\n            window.location.protocol +\n            '//' +\n            window.location.host +\n            window.location.pathname;\n        window.history.pushState('', '', newurl);\n    } else {\n        const newurl = window.location.protocol + '//' + window.location.host;\n        window.history.pushState('', '', newurl);\n    }\n};","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {\n    faExclamationTriangle,\n    faInfoCircle\n} from '@fortawesome/free-solid-svg-icons';\n\nclass Alert extends Component {\n    constructor(props) {\n        super(props);\n        this.color = null;\n        this.icon = faExclamationTriangle;\n    }\n\n    getIcon = () => {\n        return <FontAwesomeIcon icon={this.icon} />;\n    }\n\n    getStyle = () => {\n        return {\n            color: this.color,\n            fontWeight: 'bold'\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"Alert\">\n                \n                <p style={this.getStyle()}>\n                    {this.props.text !== '' \n                        ? this.getIcon()\n                        : null} {this.props.text}</p>\n            </div>\n        );\n    }    \n}\n\nclass ErrorAlert extends Alert {\n    constructor(props) {\n        super(props);\n        this.color = '#BA5550';\n    }\n}\n\nclass InfoAlert extends Alert {\n    constructor(props) {\n        super(props);\n        this.color = '#31598F';\n        this.icon = faInfoCircle;\n    }\n}\n\nAlert.propTypes = {\n    text: PropTypes.string.isRequired\n};\n\nexport {ErrorAlert, InfoAlert};","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport './CitySearch.css';\nimport {InfoAlert} from './Alert';\n\nclass CitySearch extends Component {\n    state = {\n        infoText: '',\n        query: '',\n        showSuggestions: undefined,\n        suggestions: []\n    }\n\n    handleInputChange = (value) => {\n        if (value === '') {\n            this.setState({\n                suggestions: [],\n                query: value\n            });\n            return;\n        }\n\t\t\n        const suggestions = this.props.locations.filter((location) => {\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n        });\n\n        if (suggestions.length === 0) {\n            this.setState({\n                infoText: 'No matching cities were found. Please try again.',\n                query: value,\n                suggestions\n            });\n        } else {\n            this.setState({\n                infoText: '',\n                query: value,\n                suggestions\n            });\n        }\n    }\n\n    handleItemClick = (selectedCity) => {\n        this.setState({\n            infoText: '',\n            query: selectedCity === 'all' ? 'All cities': selectedCity,\n            showSuggestions: false\n        });\n\n        this.props.updateEvents(selectedCity);\n    }\n\n    render() {\n        const {\n            query, \n            showSuggestions, \n            suggestions\n        } = this.state;\n        return (\n            <div className=\"City-Search\">\n                <label className=\"label\" htmlFor=\"city\">\n\t\t\t\t\tSearch for a city\n                </label>\n                <input \n                    id=\"city\"\n                    className=\"city\"\n                    type=\"text\" \n                    value={query}\n                    onChange={(e) => this.handleInputChange(e.target.value)}\n                    onFocus={() => this.setState({showSuggestions: true})}\n                /> \n                <ul \n                    className={`suggestions ${\n                        showSuggestions ? 'show': 'hide'}`}\n                >\n                    {suggestions.map(suggestion => (\n                        <li \n                            key={suggestion}\n                            onClick={() => this.handleItemClick(suggestion)}\n                        >\n                            {suggestion}\n                        </li>\n                    ))}\n                    <li \n                        key='all'\n                        onClick={() => this.handleItemClick('all')}\n                    >\n                        <b>See all cities</b>\n                    </li>\n                </ul>                \n                <InfoAlert \n                    text={this.state.infoText} \n                />\n            </div>\n        );\n    }\n}\n\nCitySearch.propTypes = {\n    locations: PropTypes.array.isRequired,\n    updateEvents: PropTypes.func\n};\n\nexport default CitySearch;\n","import React, {Component} from 'react';\nimport PropTypes, {shape} from 'prop-types';\nimport {convertTime} from './api';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {\n    faCalendarAlt,\n    faChevronDown,\n    faChevronUp,\n    faClock, \n    faLocationArrow,\n    faNewspaper\n} from '@fortawesome/free-solid-svg-icons';\nimport './Event.css';\n\nclass Event extends Component {\n    state = {\n        showState: false\n    }\n\n    render() {\n        const {event} = this.props;\n        const {showDetails} = this.state;\n        const eventStartDate = new Date(event.start.dateTime);\n        const eventStartHours = eventStartDate.getHours();        \n        const eventStartMinutes = eventStartDate.getMinutes();\n        // eslint-disable-next-line no-unused-vars\n        const eventStartTime = `${eventStartHours}:${\n            eventStartMinutes === 0 ? '00' : eventStartMinutes}`;\n        const eventEndDate = new Date(event.end.dateTime);\n        const eventEndHours = eventEndDate.getHours();\n        const eventEndMinutes = eventEndDate.getMinutes();\n        // eslint-disable-next-line no-unused-vars\n        const eventEndTime = `${eventEndHours}:${\n            eventEndMinutes === 0 ? '00': eventEndMinutes}`;\n        return <div className=\"Event\">\n            <h3>{event.summary}</h3>\n            <p> \n                <FontAwesomeIcon icon={faClock} /> \n                {new Date(event.start.dateTime)\n                    .toDateString()} | {\n                    convertTime(eventStartTime)} - {convertTime(eventEndTime)}\n                \n            </p>\n            <p>\n                \n                <FontAwesomeIcon icon={faLocationArrow} /> {event.location}\n            </p>\n            <div \n                className={`details ${\n                    showDetails ? 'show': 'hide'\n                }`\n                }\n            >\n                <div>\n                    <FontAwesomeIcon icon={faNewspaper} />\n                    <p>\n                        \n                        {event.description}\n                    </p> \t\n                </div>\n                \n                <div>\n                    <FontAwesomeIcon icon={faCalendarAlt} />\n                    <p>\n                        <a \n                            href={event.htmlLink} \n                            rel=\"noreferrer\"\n                            target=\"_blank\">See details on Google Calendar\n                        </a>\n                    </p>\n                    \n                    \n                </div>\n            </div>\n            <button \n                className=\"toggle-details\"\n                onClick={() => this.setState({showDetails: !showDetails})}\n            >Details {this.state.showDetails \n                    ? <FontAwesomeIcon icon={faChevronUp} />\n                    : <FontAwesomeIcon icon={faChevronDown} />}</button>\n        </div>;\n    }\n}\n\nEvent.propTypes = {\n    event: shape({\n        description: PropTypes.string.required,\n        htmlLink: PropTypes.string.required\n    })\n};\nexport default Event;","import React, {useState, useEffect} from 'react';\nimport Event from './Event';\nimport PropTypes from 'prop-types';\nimport './EventList.css';\nimport {InfoAlert} from './Alert';\n\nconst EventList = ({events}) => {\n    const [infoText, setInfoText] = useState('');\n\n    useEffect(() => {\n        setInfoText(navigator.onLine \n            ? '' : `The list loaded may not be up to date. \n        Please go online to view the most current list.`);\n    }, [events]);\n\n    return (\n        <>\n            <InfoAlert \n                text={infoText} \n            />\n            <div className=\"event-list-container\">\n                \n                <ul className=\"Event-List\">\n                    {events.map((event, i) =>\n                        <li key={i}>\n                            <Event event={event} />\n                        </li>\n                    )}\n                </ul>\n                \n            </div>\n            \n        </>\n    );\n};\n\nEventList.propTypes = {\n    events: PropTypes.array.isRequired\n};\n\nexport default EventList;","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport './NumberOfEvents.css';\n\nimport {ErrorAlert} from './Alert';\n\nconst NumberOfEvents = ({currentNumEvents, maxNumEvents, updateEvents}) => {\n    const [infoText, setInfoText] = useState('');\n    const [numEvents, setNumEvents] = useState('');\n    const [maximumNumEvents, setMaximumNumEvents] = useState('');\n        \n    useEffect(() => {\n        setNumEvents(currentNumEvents);\n        setMaximumNumEvents(maxNumEvents);\n    },[currentNumEvents, maxNumEvents]);\n\n    const handleInputChange = (value) => {\n        \n        if (value < 1 || value > maximumNumEvents) {\n            setInfoText(`Please enter a number between 1 and ${maxNumEvents}.`);\n            setNumEvents(value);\n            return;\n        } else {\n            setInfoText('');\n            setNumEvents(value);\n        }\n        \n        \n\n        updateEvents(null, value);\n    };\n\n    return (\n        <div className=\"Number-Of-Events\">\n            <label \n                className=\"label\" \n                htmlFor=\"number\">Select number of events</label>\n            <input \n                id=\"number\"\n                className=\"number\"\n                type=\"number\"\n                value={numEvents}\n                max={maximumNumEvents}\n                min=\"1\"\n                onChange={(e) => handleInputChange(e.target.value)}\n            />\n            <ErrorAlert \n                text={infoText} \n            />\n        </div>\n        \n    );\n};\n\nNumberOfEvents.propTypes = {\n    maxNumEvents: PropTypes.number,\n    updateEvents: PropTypes.func\n};\n\nexport default NumberOfEvents;\n","import React, {useEffect, useState} from 'react';\nimport {\n    PieChart, \n    Pie, \n    Cell, \n    LabelList, \n    Legend, \n    ResponsiveContainer\n} from 'recharts';\nimport PropTypes from 'prop-types';\n\n\n\n\nconst EventGenre = ({events}) => {\n    useEffect(() => {\n        setData(getGenresData());\n    }, [events]);\n\n    const [data, setData] = useState([]);\n    \n    const colors = ['#6A8CFA', '#68B54C', '#FA3824', '#ED892B', '#8B69FA'];\n\n    const getGenresData = () => {\n        let data = [\n            {name: 'jQuery', value: 0},\n            {name: 'JavaScript', value: 0},\n            {name: 'React', value: 0},\n            {name: 'Angular', value: 0},\n            {name: 'Node', value: 0}\n        ];\n\n        let sum = 0;\n        \n        // Get number of events for each genre\n        events.forEach(({summary}) => {\n            summary = summary.toLowerCase();\n            for (let i = 0; i < data.length; i++) {\n                const genre = data[i].name;\n                const value = data[i].value;\n                const regex = new RegExp(genre.toLowerCase(), 'g');\n                const matches = summary.match(regex);\n            \n                \n                if (matches) {\n                    data[i].value = value + matches.length;\n                    sum += matches.length;\n                }\n            }\n        });\n   \n        // Remove genres that have 0 events\n        data = data.filter((object) => object.value !== 0);\n\n        // Add percentage property to each object\n        data.forEach((object) => {\n            const percentage = (object.value / sum) * 100;\n            object['percentage'] = percentage.toFixed() + '%';\n        });\n\n        return data;\n    };\n\n    \n    return (\n        <div className=\"chart-container\">\n            <h3 className=\"text-center\">Events by genre</h3>\n            <ResponsiveContainer width=\"100%\" height={400}>\n                <PieChart \n                    height={400}\n                >\n                    <Legend verticalAlign=\"top\" height={30} />\n                    <Pie\n                        data={data}\n                        labelLine={false}\n                        outerRadius='90%'\n                        dataKey=\"value\"\n                    >\n                        <LabelList \n                            dataKey=\"percentage\" \n                            position=\"inside\"\n                        />\n                        {data.map((entry, index) => (\n                            <Cell key={index} fill={colors[index]} />\n                        ))}\n                    </Pie>\n                </PieChart>\n            </ResponsiveContainer>\n        </div>\n    );\n};\n\nEventGenre.propTypes = {\n    events: PropTypes.array.isRequired\n};\n\nexport default EventGenre;","import React from 'react';\nimport './WelcomeScreen.css';\nimport PropTypes from 'prop-types';\n\nfunction WelcomeScreen({showWelcomeScreen, getAccessToken}) {\n    return showWelcomeScreen ?\n        (\n            <div className=\"WelcomeScreen\">\n                <h1>Welcome to the Event Finder app</h1>\n                <h4>\n                    Sign in to see upcoming events around the world for\n\t\t\t\t\tdevelopers.\n                </h4>\n                <div className=\"button_cont\" >\n                    <div className=\"google-btn\">\n                        <div className=\"google-icon-wrapper\">\n                            <img\n                                className=\"google-icon\"\n                                // eslint-disable-next-line max-len\n                                src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\n                                alt=\"Google sign-in\"\n                            />\n                        </div>\n                        <button onClick={() => { getAccessToken(); }}\n                            rel=\"nofollow noopener\"\n                            className=\"btn-text\"\n                        >\n                            <b>Sign in with google</b>\n                        </button>\n                    </div>\n                </div>\n                <a\n                    // eslint-disable-next-line max-len\n                    href={`${process.env.PUBLIC_URL}/privacy-policy.html`}\n                    rel=\"nofollow noopener\"\n                >\n    Privacy policy\n                </a>\n            </div>\n        )\n        : null;\n}\n\nWelcomeScreen.propTypes = {\n    getAccessToken: PropTypes.func.isRequired,\n    showWelcomeScreen: PropTypes.bool.isRequired\n};\n\nexport default WelcomeScreen;","import React, {Component} from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {\n    faSearch\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n    ResponsiveContainer, \n    ScatterChart, \n    Scatter, \n    XAxis, \n    YAxis, \n    CartesianGrid, \n    Tooltip\n} from 'recharts';\n\nimport './App.css';\nimport './nprogress.css';\n\nimport {\n    checkToken, \n    extractLocations, \n    getAccessToken, \n    getEvents\n} from './api';\n\n/************ Components ***********/\nimport CitySearch from './CitySearch';\nimport EventList from './EventList';\nimport NumberOfEvents from './NumberOfEvents';\nimport EventGenre from './EventGenre';\nimport WelcomeScreen from './WelcomeScreen';\n\nclass App extends Component {\n    state = {\n        allEvents: [],\n        currentLocation: 'all',\n        currentNumEvents: 20,\n        events: [],\n        locations: [],\n        maxNumEvents: 20,\n        selectedChart: 'city',\n        showWelcomeScreen: undefined,\n        showUserInput: true\n    }\n\n    async componentDidMount() {\n        this.mounted = true;\n        const accessToken = localStorage.getItem('access_token');\n        const isTokenValid = !!((await checkToken(accessToken)).error); \n        const searchParams = new URLSearchParams(window.location.search);\n        const code = searchParams.get('code');\n        this.setState({showWelcomeScreen: !(code || isTokenValid)});\n        if ((code || isTokenValid) && this.mounted) {\n            getEvents().then((events) => {\n                if (this.mounted) {\n                    this.setState({\n                        allEvents: events,\n                        currentNumEvents: events.length,\n                        events, \n                        locations: extractLocations(events),\n                        maxNumEvents: events.length\n                    });\n                }\n            });\n        }       \n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n    }\n\n    getCitiesData = () => {      \n        const data = [];\n        const cities = {};\n        const events = this.state.events;\n        // Get number of events for each city\n        events.forEach(({location}) => {\n            let numEvents = 0;\n            if (cities.hasOwnProperty(location)) \n                numEvents = cities[location];\n\n            cities[location] = numEvents + 1; \n        });\n\n        for (const city in cities) {\n            data.push({\n                city: city.split(',')[0], // include only city without country\n                'number': cities[city]\n            });\n        }\n\n        return data;\n    }\n\n    updateEvents = async (location, numEvents) => { \n        let currentNumEvents = numEvents ? numEvents : this.state.currentNumEvents;\n        \n        /* If a location has been chosen\n            make request to get events from that location.\n            Otherwise, If the number of events has changed\n            use the stored state of all events,\n            since the events don't need to be changed,\n            just the number of them being displayed\n        */\n        let events = location \n            ?   \n                location === 'all'\n                    ? await getEvents()\n                    : (await getEvents()).filter((event) => event.location === location )\n            : this.state.allEvents\n  \n        /* Only need to change allEvents when location is changed \n            (when there is a new list of events, not just a different number of events)\n        */\n        if (location) this.setState({allEvents: events});\n\n        /* Change the number of events in the input\n            and the state of the max number of events\n            to the number of events being displayed\n            if either number is greater than the number of\n            events displayed, since they cannot select a \n            number higher than the number of events available\n        */\n        this.setState({\n            currentNumEvents: currentNumEvents > events.length\n                ? events.length\n                : currentNumEvents\n            ,\n            maxNumEvents: events.length\n        })\n\n        /* Display the number of events specified by the user or the max\n            number of events available\n        */\n        events = events.slice(0, currentNumEvents);\n        this.setState({events});                \n    }\n\n    render() {\n        const {\n            events, \n            locations, \n            selectedChart,\n            showWelcomeScreen,\n            showUserInput\n        } = this.state;\n        const { \n            getCitiesData, \n            updateEvents\n        } = this;\n\n        if (showWelcomeScreen === undefined) return <div className=\"App\" />;\n        \n        return (\n            <div className=\"App\">\n                <div className=\"sidebar\">\n                    \n                    {showUserInput ? \n                        <div className=\"user-input-container\">\n                            <span \n                                className=\"close\" \n                                onClick={() => \n                                    this.setState({\n                                        showUserInput: !showUserInput\n                                    })}\n                            >\n                                &times;\n                            </span>\n                            <CitySearch \n                                locations={locations} \n                                updateEvents={updateEvents} \n                            />\n                            <NumberOfEvents \n                                currentNumEvents={this.state.currentNumEvents}\n                                maxNumEvents={this.state.maxNumEvents} \n                                updateEvents={updateEvents} \n                            />\n                            <p className=\"label\">View events chart by:</p>\n                            <label htmlFor=\"events-by-genre\">Genre</label>\n                            <input \n                                id=\"events-by-genre\" \n                                type=\"radio\" \n                                name=\"chart\"\n                                value=\"Genre\" \n                                checked={selectedChart === 'genre'}\n                                onChange={() => this.setState({\n                                    selectedChart: 'genre'\n                                })}\n                            />\n                            \n                            <label \n                                htmlFor=\"events-by-city\"\n                            >\n                                City\n                            </label>\n                            <input \n                                id=\"events-by-city\" \n                                type=\"radio\" \n                                name=\"chart\"\n                                value=\"City\"\n                                checked={selectedChart === 'city'} \n                                onChange={() => this.setState({\n                                    selectedChart: 'city'\n                                })}\n                            />\n                           \n                        </div>\n                        : <div className=\"search-icon-container\">\n                            <span \n                                className=\"search-icon\"\n                                onClick={() => \n                                    this.setState({\n                                        showUserInput: !showUserInput\n                                    })}\n                            ><FontAwesomeIcon icon={faSearch} /> </span>\n                        </div>}\n                </div>\n \n                <div className=\"content\">\n                    <EventList \n                        events={events} \n                    />\n                    <div className=\"data-vis-wrapper\">\n                        {selectedChart === 'genre' \n                            ? <EventGenre events={events} />\n                            :\n                            <div className=\"chart-container\">\n                                <h3 className=\"text-center\">Events by city</h3>\n                                <ResponsiveContainer width=\"100%\" height={400}>\n                        \n                                    <ScatterChart\n                                        margin={{ \n                                            left: -30,\n                                            top: 5\n                                        }}\n                                    >\n                                        <CartesianGrid />\n                                        <XAxis \n                                            type=\"category\" \n                                            dataKey=\"city\" name=\"City\" />\n                                        <YAxis \n                                            allowDecimals={false}\n                                            type=\"number\" \n                                            dataKey=\"number\" \n                                            name=\"Number of events\" />\n                                        <Tooltip \n                                            cursor={{strokeDasharray: '3 3'}} \n                                        />\n                                        <Scatter \n                                            data={getCitiesData()} \n                                            fill=\"#3c92e8\" \n                                        />\n                                    </ScatterChart>\n                                </ResponsiveContainer>\n                            </div>\n                        }\n                    </div>\n                </div>\n                <WelcomeScreen \n                    showWelcomeScreen={this.state.showWelcomeScreen}\n                    getAccessToken={() => {getAccessToken();}} />\n                \n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as atatus from 'atatus-spa';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nrequire('dotenv').config();\natatus.config(process.env.REACT_APP_ATATUS_KEY).install();\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n\nreportWebVitals();\n\n"],"sourceRoot":""}